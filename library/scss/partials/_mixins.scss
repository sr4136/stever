/******************************************************************
Site Name:
Author:

Stylesheet: Mixins Stylesheet

This is where you can take advantage of Sass' great features: Mixins.
I won't go in-depth on how they work exactly,
there are a few articles below that will help do that. What I will
tell you is that this will help speed up simple changes like
changing a color or adding CSS3 techniques gradients.

A WORD OF WARNING: It's very easy to overdo it here. Be careful and
remember less is more.

Helpful:
http://sachagreif.com/useful-sass-mixins/
http://thesassway.com/intermediate/leveraging-sass-mixins-for-cleaner-code
http://web-design-weekly.com/blog/2013/05/12/handy-sass-mixins/

******************************************************************/


/*********************
TRANSITION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit-", "" );
  @each $prefix in $prefixes {
    #{$prefix}transition: $transition;
  }
}

/* ********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdo it.

Mixin printing a linear-gradient as well as a plain color fallback and the `-webkit-` prefixed declaration
@access public
@param {Keyword | Angle} $direction - Linear gradient direction
@param {Arglist} $color-stops - List of color-stops composing the gradient
******************** */

/* ********************
Convert a direction to legacy syntax
@param {Keyword | Angle} $value - Value to convert
@require {function} is-direction
@require {function} convert-angle
@throw Cannot convert value to legacy syntax because it doesn't seem to be a direction.;
******************** */


@mixin gradient($from, $to) {
  /* fallback/image non-cover color */
  background-color: $from;

  /* Firefox 3.6+ */
  background-image: -moz-linear-gradient($from, $to);

  /* Safari 4+, Chrome 1+ */
  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from), to($to));

  /* Safari 5.1+, Chrome 10+ */
  background-image: -webkit-linear-gradient($from, $to);

  /* Opera 11.10+ */
  background-image: -o-linear-gradient($from, $to);
}

/*********************
BOX SIZING
*********************/

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing:    $type;
	-ms-box-sizing:     $type;
	box-sizing:         $type;
}

/*********************
 BG Sprite
 Assumed offset -10, -10 and hover/next is -50
*********************/
@mixin sprite-bg($index, $hover:false) {
	background-position: -10px -#{10+$index*50}px;
	@if $hover == true{
		&:hover {
			color: #FFFFFF;
			background-position: -60px -#{10+$index*50}px;
		}
	}
}
